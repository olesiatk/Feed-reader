{"version":3,"sources":["components/FeedScreen/UI/FeedList.jsx","api/api.js","components/FeedScreen/FeedScreen.jsx","components/LoginScreen/LoginScreen.jsx","App.js","reportWebVitals.js","index.js"],"names":["FeedList","posts","getActiveLink","map","post","onClick","body","title","id","URL_Posts","putUser","username","password","fetch","method","then","response","json","result","getPosts","userId","console","log","putPost","FeedScreen","goToLoginScreen","useState","setTitle","setBody","setPosts","getNewPosts","a","newPosts","addPost","useEffect","className","onSubmit","e","preventDefault","type","value","onChange","target","required","link","LoginScreen","goToFeedScreen","setUsername","setPassword","logIn","trim","test","pattern","App","onFeedPage","setOnFeedPage","setUserId","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.040a1ef9.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport const FeedList = ({ posts, getActiveLink }) => {\n\n\n\n  return (\n    <ul>\n      {posts.map(post => (\n        <li \n          key={post.id} \n          onClick={()=>getActiveLink(post.body)}\n        >\n          {post.title}\n        </li>\n      ))}\n    </ul>\n  )\n}","const URL_Users = 'https://jsonplaceholder.typicode.com/users';\nconst URL_Posts = 'https://jsonplaceholder.typicode.com/posts';\n\nexport const putUser = ({ username, password }) => fetch(URL_Users, {\n  method: 'POST',\n  body: { username, password }\n})\n  .then(response => response.json())\n    .then(result => result.id);\n\nexport const getPosts = ({ userId }) => fetch(`${URL_Posts}?userId=${userId}`)\n  .then(response => response.json())\n    .then(result => console.log(result));\n\nexport const putPost = ({ userId, title, body }) => fetch(URL_Posts, {\n  method: 'POST',\n  body: { userId, title, body }\n})\n  .then(response => response.json());\n\nexport const deletePost = ({ postId }) => fetch(`${URL_Posts}/${ postId }`, {\n  method: 'DELETE',\n})\n  .then(response => response.json());","import React, { useEffect, useState, useCallback } from 'react';\nimport './FeedScreen.css';\nimport { FeedList } from './UI/FeedList';\nimport { getPosts, putPost } from '../../api/api';\n\nexport const FeedScreen = ({ userId, goToLoginScreen}) => {\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [posts, setPosts] = useState([]);\n  const [activelink, setActiveLink] = useState('');\n\n  // useCallback(()=>{\n  //   putPost(userId, 'NASA Breaking news', 'https://www.nasa.gov/rss/dyn/breaking_news.rss')\n  //   putPost(userId, 'Reddit front page', 'https://www.reddit.com/.rss')\n  //   putPost(userId, 'Mobile World Live', 'https://www.mobileworldlive.com/latest-stories/feed/')\n  //   getPosts(userId)\n  //     .then(result => setPosts(result));\n  // }, [userId])\n\n  const getNewPosts = async() => {\n    const newPosts = await getPosts(userId);\n    setPosts(newPosts);\n  }\n\n  const addPost = async () => {\n    putPost(userId, title, body);\n  }\n\n  useEffect(() => {\n    getNewPosts();\n  }, [])\n\n  const getActiveLink = (link) => {\n    console.log(link)\n  }\n\n  return (\n    <section>\n      <header className=\"Feed__header\">\n        <h1>Feed Reader</h1>\n        <button \n          className=\"Button\" \n          onClick={()=>goToLoginScreen()}\n        >\n          Log Out\n        </button>\n      </header>\n      <main>\n        <form \n          className=\"Feed__form\"\n          onSubmit={(e)=>{\n            e.preventDefault();\n            addPost();\n          }}\n        >\n          <button \n            className=\"Feed__Button\"\n            type=\"submit\"\n          >\n            Add\n          </button>\n          <label>\n            Title\n            <input \n              className=\"Form__input\"\n              type=\"text\"\n              title=\"Put your name\"\n              value={title}\n              onChange={e=>setTitle(e.target.value)}\n              required />\n          </label>\n          <label>\n            RSS link\n            <input \n              className=\"Form__input\"\n              type=\"text\"\n              value={body}\n              onChange={e=>setBody(e.target.value)}\n              required \n            />\n          </label>\n        </form>\n        {posts && (\n          <FeedList \n            posts={posts}\n            getActiveLink={getActiveLink}\n          />\n        )}\n      </main>\n    </section>\n\n  )\n}","import React, { useState } from 'react';\nimport { putUser } from '../../api/api';\nimport './LoginScreen.css'\n\nexport const LoginScreen = ({goToFeedScreen}) => {\n  const [ username, setUsername ] = useState('');\n  const [ password, setPassword ] = useState('');\n\n\n  const logIn = async() => {\n    if (username.trim()) {\n      if (/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/.test(password)) {\n        const id = await putUser(username, password);\n        goToFeedScreen(id);\n        return \n      } \n    }\n  } \n\n  return (\n    <>\n      <h1>Feed reader</h1>\n      <p>Please, login to watch all </p>\n      <form \n        className=\"Form\"\n        onSubmit={(e)=>{\n          e.preventDefault();\n          logIn()\n        }}\n      >\n        <label>\n          Username\n          <input \n            className=\"Form__input\"\n            type=\"text\"\n            title=\"Put your name\"\n            value={username}\n            onChange={e=>setUsername(e.target.value)}\n            required />\n        </label>\n        <label>\n          Password\n          <input \n            className=\"Form__input\"\n            type=\"password\"\n            value={password}\n            pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n            title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\"\n            onChange={e=>setPassword(e.target.value)}\n            required \n          />\n        </label>\n        <button \n          className=\"Button\"\n          type=\"submit\"\n        >\n          Log In\n        </button>\n      </form>\n    </>\n  )\n}","import React, { useState } from 'react'\nimport './App.css';\nimport { FeedScreen } from './components/FeedScreen/FeedScreen';\nimport { LoginScreen } from './components/LoginScreen/LoginScreen';\n\n\nfunction App() {\n  const [onFeedPage, setOnFeedPage] = useState(false);\n  const [userId, setUserId] = useState(null);\n\n  const goToFeedScreen = (id) => {\n    setUserId(id);\n    setOnFeedPage(true);\n  }\n  const goToLoginScreen = () => {\n    setUserId(null);\n    setOnFeedPage(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <main className=\"App-header\">\n        {!onFeedPage && (\n          <LoginScreen \n          goToFeedScreen={goToFeedScreen}\n          />\n        )}\n        {onFeedPage && userId && (\n          <FeedScreen\n          userId={userId}\n          goToLoginScreen={goToLoginScreen}\n          />\n        )}\n      </main>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}